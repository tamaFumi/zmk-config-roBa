#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/pointing.h>

&mt {
    flavor = "balanced";
    quick-tap-ms = <0>;
};

&trackball {
    /* automouse-layer = <3>; */

    scroll-layers = <4>;

    // arrows {
    //     layers = <3>;
    //     bindings =
    //         <&kp RIGHT_ARROW>,
    //         <&kp LEFT_ARROW>,
    //         <&kp UP_ARROW>,
    //         <&kp DOWN_ARROW>;
    //     tick = <10>;
    //     wait-ms = <5>;
    //     tap-ms = <5>;
    // };
};

/ {
    combos {
        compatible = "zmk,combos";

        tab {
            bindings = <&kp TAB>;
            key-positions = <11 12>;
        };

        shift_tab {
            bindings = <&kp LS(TAB)>;
            key-positions = <12 13>;
        };

        muhennkann {
            bindings = <&to_layer_0 INT_MUHENKAN>;
            key-positions = <11 10>;
        };

        double_quotation {
            bindings = <&kp DOUBLE_QUOTES>;
            key-positions = <20 21>;
        };

        eq {
            bindings = <&kp EQUAL>;
            key-positions = <24 25>;
        };
    };

    macros {
        to_layer_0: to_layer_0 {
            compatible = "zmk,behavior-macro-one-param";
            #binding-cells = <1>;
            bindings = <&to 0 &macro_param_1to1 &kp MACRO_PLACEHOLDER>;
            label = "TO_LAYER_0";
        };
    };

    behaviors {
        lt_to_layer_0: lt_to_layer_0 {
            compatible = "zmk,behavior-hold-tap";
            label = "LAYER_TAP_TO_0";
            bindings = <&mo>, <&to_layer_0>;

            #binding-cells = <2>;
            tapping-term-ms = <200>;
        };
    };

    keymap {
        compatible = "zmk,keymap";

        default_layer {
            bindings = <
&lt 7 Q      &kp L             &kp U           &kp MINUS  &kp PERIOD                                    &kp F        &kp W  &kp R            &kp Y              &lt 6 P
&mt LCTRL E  &mt LEFT_SHIFT I  &mt LEFT_ALT A  &kp O      &kp COMMA    &none             &kp LS(F10)    &kp K        &kp T  &mt RIGHT_ALT N  &mt S RIGHT_SHIFT  &mt LCTRL H
&kp SLASH    &kp Z             &kp X           &kp C      &kp V        &kp LEFT_WIN      &none          &kp G        &kp D  &kp M            &lt 2 J            &lt 4 B
&none        &none             &none           &lt 3 ESC  &lt 2 SPACE  &lt 4 TAB         &kp BACKSPACE  &lt 2 ENTER                                             &none
            >;

            sensor-bindings = <&inc_dec_kp PAGE_DOWN PAGE_DOWN>;
        };

        QWERT {
            bindings = <
&trans       &kp W             &kp E           &kp R   &kp T                       &kp Y   &kp U  &kp I            &kp O              &trans
&mt LCTRL A  &mt LEFT_SHIFT S  &mt LEFT_ALT D  &kp F   &kp G   &trans      &trans  &kp H   &kp J  &mt RIGHT_ALT K  &mt RIGHT_SHIFT L  &mt RCTRL MINUS
&kp Z        &kp X             &kp C           &kp V   &kp B   &trans      &trans  &kp N   &kp M  &kp COMMA        &kp PERIOD         &kp SLASH
&trans       &trans            &trans          &trans  &trans  &trans      &trans  &trans                                             &trans
            >;

            sensor-bindings = <&inc_dec_kp PG_DN PAGE_UP>;
        };

        NUM {
            bindings = <
&kp GRAVE        &kp KP_NUMBER_7  &kp KP_NUMBER_8  &kp KP_NUMBER_9  &kp LEFT_WIN                             &kp LS(F10)  &kp KP_PLUS     &kp KP_MINUS    &kp KP_MULTIPLY  &kp KP_SLASH
&kp KP_NUMBER_0  &kp KP_NUMBER_4  &kp KP_NUMBER_5  &kp KP_NUMBER_6  &msc SCRL_UP    &none        &none       &mkp MB4     &mkp MB1        &kp UP_ARROW    &mkp MB2         &mkp MB3
&kp KP_DOT       &kp KP_NUMBER_1  &kp KP_NUMBER_2  &kp KP_NUMBER_3  &msc SCRL_DOWN  &none        &none       &mkp MB5     &kp LEFT_ARROW  &kp DOWN_ARROW  &kp RIGHT_ARROW  &kp PRINTSCREEN
&none            &none            &none            &kp ESC          &kp SPACE       &kp TAB      &kp DELETE  &kp ENTER                                                     &none
            >;

            sensor-bindings = <&inc_dec_kp PG_DN PAGE_UP>;
        };

        SYM {
            bindings = <
&kp LS(NUMBER_1)  &kp LS(NUMBER_2)  &kp LS(NUMBER_3)  &kp LS(NUMBER_4)  &kp LS(N5)                                 &kp LS(NUMBER_6)  &kp LS(N7)        &kp LS(N8)  &kp LS(N9)        &kp INTERNATIONAL_3
&kp LCTRL         &kp LEFT_SHIFT    &kp LEFT_ALT      &none             &none       &kp RIGHT_BRACKET      &none   &kp BACKSLASH     &kp LEFT_BRACKET  &kp PLUS    &kp SINGLE_QUOTE  &kp SEMI
&none             &none             &none             &none             &none       &none                  &trans  &trans            &trans            &trans      &trans            &kp INTERNATIONAL_1
&none             &none             &none             &none             &none       &none                  &none   &none                                                             &none
            >;
        };

        FUN {
            bindings = <
&kp F1        &kp F2             &kp F3           &kp F4   &none                       &none   &kp HOME  &kp PAGE_UP    &kp PAGE_DOWN    &kp END
&mt LCTRL F5  &mt LEFT_SHIFT F6  &mt LEFT_ALT F7  &kp F8   &none   &none       &none   &none   &none     &kp RIGHT_ALT  &kp RIGHT_SHIFT  &kp RCTRL
&kp F9        &kp F10            &kp F11          &kp F12  &none   &none       &none   &none   &none     &none          &none            &none
&none         &none              &none            &trans   &trans  &trans      &trans  &trans                                            &none
            >;
        };

        MOUSE {
            bindings = <
&trans  &trans  &trans  &trans  &trans                      &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans      &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans      &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans      &trans  &trans                          &trans
            >;
        };

        SCROLL {
            bindings = <
&trans  &trans  &trans  &trans  &trans                      &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans      &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans      &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans      &trans  &trans                          &trans
            >;
        };

        SNIPE {
            bindings = <
&trans  &bt BT_NXT  &bt BT_PRV  &bt BT_CLR  &bootloader                      &none   &trans  &trans  &trans  &tog 1
&trans  &trans      &trans      &trans      &trans       &trans      &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans      &trans      &trans      &trans       &trans      &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans      &trans      &trans      &trans       &trans      &trans  &trans                          &trans
            >;
        };
    };
};
